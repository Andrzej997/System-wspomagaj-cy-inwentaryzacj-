package pl.polsl.reservations.client.views;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.InputMap;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;
import pl.polsl.reservations.client.views.utils.ButtonStyle;
import pl.polsl.reservations.client.views.utils.PanelStyle;

/**
 *
 * @author Ola
 */
public class TutorialView extends JPanel {

    private static final long serialVersionUID = 5902382055394831826L;

    private MainView window;
    private int counter = 0;
    private JButton prevBtn;
    private JButton nextBtn;
    private JLabel picLabel;
    private JLabel textLabel;
    private JPanel mainPanel;

    public TutorialView(MainView window) {
        this.window = window;
        initComponents();
    }

    private void initComponents() {
        initObjects();
        try {
            Image img = ImageIO.read(getClass().getResource("/resources/left.png"));
            ButtonStyle.setStyle(prevBtn, img);
            Image img2 = ImageIO.read(getClass().getResource("/resources/right.png"));
            ButtonStyle.setStyle(nextBtn, img2);
            setupTutorial();
        } catch (IOException e) {
            System.out.println("RESOURCE ERROR: " + e.toString());
        }
        setListeners();
        add(mainPanel);
        add(textLabel);
        keyInputDispatcher();
    }

    private void setListeners() {
        prevBtn.addActionListener((ActionEvent e) -> {
            try {
                counter--;
                setupTutorial();
            } catch (IOException ex) {
                Logger.getLogger(TutorialView.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
        nextBtn.addActionListener((ActionEvent e) -> {
            try {
                counter++;
                setupTutorial();
            } catch (IOException ex) {
                Logger.getLogger(TutorialView.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    private void setupTutorial() throws IOException {
        Image myPicture = null;
        switch (counter) {
            case 0:
                myPicture = ImageIO.read(getClass().getResource("/resources/1.png"));
                textLabel.setText("<html>First step: login. Your login and password is generated by admin. You can also enter as a guest with limited access. </html>");
                break;
            case 1:
                myPicture = ImageIO.read(getClass().getResource("/resources/2.png"));
                textLabel.setText("<html>Here is your menu. Grey options aren't available for you.</html>");
                break;
            case 2:
                myPicture = ImageIO.read(getClass().getResource("/resources/3.png"));
                textLabel.setText("<html>Week view. You can check your plan here.</html>");
                break;
            case 3:
                myPicture = ImageIO.read(getClass().getResource("/resources/day.png"));
                textLabel.setText("<html>When you click on day name you can enter day data view.</html>");
                break;
            case 4:
                myPicture = ImageIO.read(getClass().getResource("/resources/4.png"));
                textLabel.setText("<html>Choose your date!</html>");
                break;
            case 5:
                myPicture = ImageIO.read(getClass().getResource("/resources/5.png"));
                textLabel.setText("<html>Click on reservation area to enter edit mode.</html>");
                break;
            case 6:
                myPicture = ImageIO.read(getClass().getResource("/resources/6.png"));
                textLabel.setText("<html>Choose reservtion to edit. Don't worry, we will remind you it is required :)</html>");
                break;
            case 7:
                myPicture = ImageIO.read(getClass().getResource("/resources/7.png"));
                textLabel.setText("<html>Click on 'add reservation' to add new reservation</html>");
                break;
            case 8:
                myPicture = ImageIO.read(getClass().getResource("/resources/8.png"));
                textLabel.setText("<html>You can generate full raport, raport for department or raport for room. Type the name and choose directory!</html>");
                break;
            case 9:
                myPicture = ImageIO.read(getClass().getResource("/resources/10.png"));
                textLabel.setText("<html>Change your password to protect your data.</html>");
                break;
            case 10:
                myPicture = ImageIO.read(getClass().getResource("/resources/12.png"));
                textLabel.setText("<html>At the end of the work remember to logout!</html>");
                break;
            case 11:
                myPicture = ImageIO.read(getClass().getResource("/resources/13.png"));
                textLabel.setText("<html>Sometimes you can get lost, when there are so many options...</html>");
                break;
            case 12:
                nextBtn.setVisible(true);
                myPicture = ImageIO.read(getClass().getResource("/resources/back.png"));
                textLabel.setText("<html>...but you can always go back!</html>");
                break;
            case 13:
                myPicture = ImageIO.read(getClass().getResource("/resources/14.png"));
                textLabel.setText("<html>If you think you are smart enough - request for more power.</html>");
                break;
            case 14:
                window.getTutorialFrame().dispose();

        }
        picLabel.setIcon(new ImageIcon(myPicture.getScaledInstance(300, -1,
                java.awt.Image.SCALE_SMOOTH)));
        picLabel.repaint();
        textLabel.repaint();
    }

    private void initObjects() {
        picLabel = new JLabel("",SwingConstants.CENTER);
        prevBtn = new JButton();
        nextBtn = new JButton();
        textLabel = new JLabel();
        setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));
        mainPanel = new JPanel();
        mainPanel.setLayout(new BoxLayout(mainPanel, BoxLayout.X_AXIS));
        mainPanel.add(prevBtn);
        mainPanel.add(picLabel);
        mainPanel.add(nextBtn);
        PanelStyle.setSize(textLabel, 500, 50);
        textLabel.setHorizontalAlignment(SwingConstants.CENTER);
        PanelStyle.setSize(mainPanel, 460, 300, true);
        setBorder(new EmptyBorder(20, 20, 20, 20));
        PanelStyle.setSize(this, 460, 380,true);

    }

    private void keyInputDispatcher() {

        InputMap inputMap = this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = this.getActionMap();

        AbstractAction escapeAction = new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                TutorialView.this.getWindow().dispose();
                System.exit(0);
            }
        };
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "escape");
        actionMap.put("escape", escapeAction);
    }

    public MainView getWindow() {
        return window;
    }

    public void setWindow(MainView window) {
        this.window = window;
    }

}
